{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPBoNFMVc3oQlgSMY2oZ3qB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["1.Class \n","\n","---- A Class is a collection of object\n","\n","---- Class contain blueprint or prototype for which objects lare being created\n","\n","---- It is logical entity that has specific attributes and Methods"],"metadata":{"id":"4Lsp18HvcHwq"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"IrT0mXtIZu-v"},"outputs":[],"source":["class student:\n","  pass"]},{"cell_type":"code","source":["class students:                          # Without Memory \n","  name = \"Shubham\"                       # Memory Is not assign \n","  roll_no = 31\n","\n","  def display():\n","    print(\"Name of Student is :\",name)\n","    print(\"Roll No of Student is :\",roll_no)"],"metadata":{"id":"Hq_uHYwVafYQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n"],"metadata":{"id":"J0BgwVmuatDz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","1) Object\n","    It is a runtime entity which execute the class / which represent the class.\n","    The object is an entity that has state and Behaviour.\n","    It may be any real-world object like mobile ,laptop etc. \n","\n","    1) State \n","    2) Behaviour \n","    3) Identity \n","\n","     ## Constructor assigns the memory  \n","\n","        Syntax : \n","          object_name = class_name()\n","\"\"\""],"metadata":{"id":"FQA8uxQ6fFvX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["std = students()"],"metadata":{"id":"2QR8uS4YessL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["id(std)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XcGyqW2LhcYd","executionInfo":{"status":"ok","timestamp":1681723351651,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"e63258b6-1564-4e84-85ac-07e040282c58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["139958290448640"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["stud = students()"],"metadata":{"id":"6ZBe9DW5hd6M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["id(stud)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7RHAAFlShn25","executionInfo":{"status":"ok","timestamp":1681723402459,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"04188dfc-1f30-4693-b7d7-815229afe5a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["139958035548336"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["\"\"\"\n","To access the class member using Object\n","\n","object_name.data_member --- to access the data from class \n","object_name.member_function --- to access the method from the class \n","\n","\n","\n","\"\"\""],"metadata":{"id":"ex1lBFv9hqFh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["std.name,std.roll_no"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o_ZkAiI0jic_","executionInfo":{"status":"ok","timestamp":1681723996976,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"2029d33f-ce79-460e-d606-762e28822333"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('Shubham', 31)"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["std.display"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X5WQaxbdjlnv","executionInfo":{"status":"ok","timestamp":1681723925861,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"f63e80c6-cc7b-41ee-e416-1f4340df3df1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method students.display of <__main__.students object at 0x7f4a942f8100>>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["class students:                          # Without Memory \n","  name = \"Shubham\"                       # Memory Is not assign \n","  roll_no = 31\n","\n","  def display(self):                     # Self calls the fuction itself self.name means display name\n","    print(\"Name of Student is :\",self.name)\n","    print(\"Roll No of Student is :\",self.roll_no)\n","\n","std = students()"],"metadata":{"id":"6cXuRlGEjp-R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["std.display()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BzK5CUZmkVIS","executionInfo":{"status":"ok","timestamp":1681724146497,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"f37597df-3f2a-4bfe-9354-7bfd019ecd17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Name of Student is : Shubham\n","Roll No of Student is : 31\n"]}]},{"cell_type":"code","source":["class employee:\n","  def __init__(self):     ## Constructor assigns the memory  \n","    self.name = \"Shubhankar\"\n","    self.age = 22\n","    \n","  def update(self):\n","    self.age = 28\n","\n","e1 = employee()\n","e2 = employee()\n","\n","print(id(e1.name))\n","print(id(e1.age))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LRrd3a2QkY_G","executionInfo":{"status":"ok","timestamp":1681724680851,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"3760d8a0-799e-4f7e-967b-0578c38fbd94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["139958034169712\n","139958819445712\n"]}]},{"cell_type":"code","source":["print(id(e2.name))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nZuj9teKlYq_","executionInfo":{"status":"ok","timestamp":1681724469721,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"0fa0f6b4-5cba-4ac5-c542-fea49b0bf7ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["139958034169712\n"]}]},{"cell_type":"code","source":["e2.update()\n","print(id(e2.age))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B_D0cjbylqft","executionInfo":{"status":"ok","timestamp":1681724965662,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"fcb7bc32-fa12-432d-a63c-9b27653ae676"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["139958819445904\n"]}]},{"cell_type":"code","source":["\"\"\"\n","CONSTRUCTOR\n","\n","--- It is a special method in python , use for initialization of data member\n","--- This method automatically called when we create object for the class \n","--- Constructor will be executed only once it takes at least one argument(self)\n","\n","\"\"\""],"metadata":{"id":"eAYOEWN7mxDq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class employee:\n","  def __init__(self,name,e_id,gender):\n","    self.name = name\n","    self.e_id = e_id\n","    self.gender = gender\n","  \n","  def display_info(self):\n","      print(\"Name of the employee is :\",self.name)\n","      print(\"Age of Employee is : \",self.e_id)\n","      print(\"Gender of the employee is :\",self.gender)\n","\n"],"metadata":{"id":"_-Ftnw1OqBXf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["emp1 = employee(\"Nidhish\",5012,\"Male\")"],"metadata":{"id":"KGBKjmw8qp1w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["emp1.display_info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qwCIn7IFsHx2","executionInfo":{"status":"ok","timestamp":1681726175536,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"c9371abd-203a-45a3-bc1f-3df50b6478df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Name of the employee is : Nidhish\n","Age of Employee is :  5012\n","Gender of the employee is : Male\n"]}]},{"cell_type":"code","source":["class car:\n","  wheels = 4 #\n","  def __init__(self):\n","    self.name = \"BMW\"  # Instance Variable  -- -- -- Are unique to each instances\n","    self.doors = 2\n","\n","c1 = car()\n","c2 = car()\n","\n","print(c1.name,c1.doors)\n","print(c2.name,c2.doors)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gOV7yFvrsPP7","executionInfo":{"status":"ok","timestamp":1681726719808,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"55ec238a-72a7-48c3-a769-7b4c87598f46"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["BMW 2\n","BMW 2\n"]}]},{"cell_type":"markdown","source":["# Inheritance\n","### The Class that derives the properties is called as derived / child class / Subclass  \n","### The class which properties are being derived is called as base class / parent / superclass "],"metadata":{"id":"BIRy67vd4pzY"}},{"cell_type":"code","source":["class car:\n","  def __init__(self,windows,doors,enginetype):\n","    self.windows = windows \n","    self.doors = doors \n","    self.enginetype = enginetype\n","  def drive(self):\n","    print(\"Car is used for driving\")\n","\n","class Audi(car):\n","  def __init__(self,windows,doors,enginetype,fueltype):\n","    car.__init__(self,windows,doors,enginetype)\n","    self.fueltype = fueltype\n","\n","audir8 = Audi(2,2,\"V8\",\"Diesel\")\n","car1 = car(4,4,\"Petrol\")\n","    "],"metadata":{"id":"kKquP0dA4pVK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(audir8.windows)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vcAC_gEmuUH7","executionInfo":{"status":"ok","timestamp":1681730423725,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"37e7e18c-3ca4-433e-fcc7-a6c4f8976e69"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"code","source":["car1.enginetype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Kqq1Rc8I8aBb","executionInfo":{"status":"ok","timestamp":1681730447013,"user_tz":-330,"elapsed":526,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"5521dde3-05af-4325-b759-38b19a931189"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Petrol'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["print(car1)\n","print(audir8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6y25HlJc8iIA","executionInfo":{"status":"ok","timestamp":1681730497235,"user_tz":-330,"elapsed":645,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"6f7af73d-0346-4c28-d71e-04b174fabd38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<__main__.car object at 0x7f4a942f88e0>\n","<__main__.Audi object at 0x7f4a942f8d60>\n"]}]},{"cell_type":"code","source":["print(dir(car1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6P7QiqTG8lPA","executionInfo":{"status":"ok","timestamp":1681730512450,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"1b3a1c40-a279-4061-cc88-56917ece7f2d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'doors', 'drive', 'enginetype', 'windows']\n"]}]},{"cell_type":"code","source":["class car:\n","  def __init__(self,windows,doors,enginetype):\n","    self.windows = windows \n","    self.doors = doors \n","    self.enginetype = enginetype\n","  def drive(self):\n","    print(\"Car is used for driving\")\n","\n","class Audi(car):\n","  def __init__(self,windows,doors,enginetype,fueltype):\n","    car.__init__(self,windows,doors,enginetype)\n","    self.fueltype = fueltype\n","\n","audir8 = Audi(2,2,\"V8\",\"Diesel\")\n","car1 = car(4,4,\"Petrol\")"],"metadata":{"id":"OrbJPH8P8yGF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["audir8.drive()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RpXtksv_9ap2","executionInfo":{"status":"ok","timestamp":1681730725161,"user_tz":-330,"elapsed":497,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"ccc5cd2d-3bb8-4fc4-8ca7-fb213f8b6b28"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Car is used for driving\n"]}]},{"cell_type":"code","source":["class lion:\n","  def __init__(self,height,weight,eye_color):\n","    self.height = height\n","    self.weight = weight\n","    self.eye_color = eye_color\n","  def found(self):\n","    print(\"Lions Cub\")\n","\n","class cub(lion):\n","  def __init__(self,height,weight,eye_color,size):\n","    lion.__init__(self,height,weight,eye_color)\n","\n","lions = lion(10,78,\"red\")\n","cub1 = cub(10,20,\"red\",38)\n","\n","\n"],"metadata":{"id":"a7EN_U889amR","executionInfo":{"status":"ok","timestamp":1681809874413,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["cub1.height"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NjNoFP9jAe5F","executionInfo":{"status":"ok","timestamp":1681809881420,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"06b85e7a-159a-41c4-bf3f-54ddcf77b31f"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["cub1.eye_color"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"lUJoYrfW9_ze","executionInfo":{"status":"ok","timestamp":1681809882668,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"dda008b3-85a9-4e5c-e6dd-e1dc959e33db"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'red'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":[],"metadata":{"id":"gbP8pDU0AuIO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Forms Of Inheritance In OOPS\n"],"metadata":{"id":"CSbfx5x0rlNj"}},{"cell_type":"markdown","source":["# Single Inheritance   --- Single Class  \n","            This is a form of a inheritance in which a class inherit only one parent class.\n","# Multiple Inheritance --- Multiple \n","            An Inheritance becomes a multiple inheritance when a class inherit more than one parent class.\n","# Multi-level Inheritance :\n","            A class_1 is inherited by class_2 and this class_2 also gets inherit by class_3 and this process goes on.\n","            This is the multi-Level inheritance \n","# Hierarchicall Inheritance:\n","          In this    "],"metadata":{"id":"0ia6HY2er7Rc"}},{"cell_type":"code","source":[],"metadata":{"id":"Go6H7QIcrqM-"},"execution_count":null,"outputs":[]}]}