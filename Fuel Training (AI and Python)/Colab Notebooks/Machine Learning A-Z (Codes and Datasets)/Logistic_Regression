{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPY5n0KWoQIig7vtMQEGAzv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":135,"metadata":{"id":"XgWMWWWYcagv","executionInfo":{"status":"ok","timestamp":1681120535737,"user_tz":-330,"elapsed":5,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"outputs":[],"source":["# import important libraries\n","import numpy as np\n","import pandas as pd \n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n"]},{"cell_type":"code","source":["# Load The Dataset\n","df = sns.load_dataset(\"iris\")\n","df"],"metadata":{"id":"ScJyJCuDc6Ic","executionInfo":{"status":"ok","timestamp":1681120552465,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"0cb50976-7c32-4f7c-8a27-36b1837740df","colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width    species\n","0             5.1          3.5           1.4          0.2     setosa\n","1             4.9          3.0           1.4          0.2     setosa\n","2             4.7          3.2           1.3          0.2     setosa\n","3             4.6          3.1           1.5          0.2     setosa\n","4             5.0          3.6           1.4          0.2     setosa\n","..            ...          ...           ...          ...        ...\n","145           6.7          3.0           5.2          2.3  virginica\n","146           6.3          2.5           5.0          1.9  virginica\n","147           6.5          3.0           5.2          2.0  virginica\n","148           6.2          3.4           5.4          2.3  virginica\n","149           5.9          3.0           5.1          1.8  virginica\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-f51d6d2b-425a-49fe-9203-a7db5e1a0fa6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>virginica</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>virginica</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>virginica</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>virginica</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>virginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f51d6d2b-425a-49fe-9203-a7db5e1a0fa6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f51d6d2b-425a-49fe-9203-a7db5e1a0fa6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f51d6d2b-425a-49fe-9203-a7db5e1a0fa6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":["df= df[df.species != \"setosa\"]"],"metadata":{"id":"j3nEfYIdczA2","executionInfo":{"status":"ok","timestamp":1681120556103,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":140,"outputs":[]},{"cell_type":"code","source":["df.species.unique()"],"metadata":{"id":"huq1NM6Mc8We","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681120558713,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"3244a82d-e9e2-4b31-a3f3-4c99a6bf9333"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['versicolor', 'virginica'], dtype=object)"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":[],"metadata":{"id":"TRrgocCTgGrK","executionInfo":{"status":"ok","timestamp":1681120559611,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":141,"outputs":[]},{"cell_type":"code","source":["df[\"species\"].replace({'versicolor':0, 'virginica':1,},inplace=True)"],"metadata":{"id":"hwT-hmnca4_x","executionInfo":{"status":"ok","timestamp":1681120559611,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":142,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"os8EYabHbJ2o","executionInfo":{"status":"ok","timestamp":1681120559611,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"aaa199fb-c135-40e0-ea6f-f4105dcfb2d1"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width  species\n","50            7.0          3.2           4.7          1.4        0\n","51            6.4          3.2           4.5          1.5        0\n","52            6.9          3.1           4.9          1.5        0\n","53            5.5          2.3           4.0          1.3        0\n","54            6.5          2.8           4.6          1.5        0\n","..            ...          ...           ...          ...      ...\n","145           6.7          3.0           5.2          2.3        1\n","146           6.3          2.5           5.0          1.9        1\n","147           6.5          3.0           5.2          2.0        1\n","148           6.2          3.4           5.4          2.3        1\n","149           5.9          3.0           5.1          1.8        1\n","\n","[100 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-e4f3fac6-f16b-4dba-9fa4-a03cf2396656\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>4.5</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>6.9</td>\n","      <td>3.1</td>\n","      <td>4.9</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4f3fac6-f16b-4dba-9fa4-a03cf2396656')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4f3fac6-f16b-4dba-9fa4-a03cf2396656 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4f3fac6-f16b-4dba-9fa4-a03cf2396656');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":143}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n_u6XUc2bsP3","executionInfo":{"status":"ok","timestamp":1681120562212,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"0045aee7-c68e-4df7-ab48-ab630aa0cafc"},"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sepal_length    0\n","sepal_width     0\n","petal_length    0\n","petal_width     0\n","species         0\n","dtype: int64"]},"metadata":{},"execution_count":144}]},{"cell_type":"code","source":["X = df.iloc[:,:-1].values\n","y = df.iloc[:,-1].values"],"metadata":{"id":"ENC_VVO1bKjy","executionInfo":{"status":"ok","timestamp":1681120563132,"user_tz":-330,"elapsed":1,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":145,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size =0.25,random_state=30)\n"],"metadata":{"id":"ahsk3W37bS_d","executionInfo":{"status":"ok","timestamp":1681121325118,"user_tz":-330,"elapsed":535,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":169,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","classifier = LogisticRegression(random_state=0)"],"metadata":{"id":"ldbYHSIgb5YL","executionInfo":{"status":"ok","timestamp":1681120912839,"user_tz":-330,"elapsed":672,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":159,"outputs":[]},{"cell_type":"code","source":["classifier.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"JiQ19Aeld0-k","executionInfo":{"status":"ok","timestamp":1681120913514,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"01d21708-54dc-4d74-ec40-9d584012e338"},"execution_count":160,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=0)"],"text/html":["<style>#sk-container-id-10 {color: black;background-color: white;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=0)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["y_pred=classifier.predict(X_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GtvXkYOXd7No","executionInfo":{"status":"ok","timestamp":1681120914036,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"4e5483ba-f12f-4b1b-d224-389c66f00e2e"},"execution_count":161,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0])"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix,accuracy_score,classification_report"],"metadata":{"id":"Wb3_-8qmeBC1","executionInfo":{"status":"ok","timestamp":1681120914037,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":162,"outputs":[]},{"cell_type":"code","source":["report = classification_report(y_test,y_pred)\n","print(report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7UU1U4FskZLM","executionInfo":{"status":"ok","timestamp":1681120914992,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"cd69bec2-8777-4b25-d0a7-fbd93bb510f3"},"execution_count":163,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        11\n","           1       1.00      1.00      1.00        14\n","\n","    accuracy                           1.00        25\n","   macro avg       1.00      1.00      1.00        25\n","weighted avg       1.00      1.00      1.00        25\n","\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"oZZXCvi8m_0a"}},{"cell_type":"code","source":["cm = confusion_matrix(y_test, y_pred) \n","cm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8-dbvHGDeKaH","executionInfo":{"status":"ok","timestamp":1681120915774,"user_tz":-330,"elapsed":1,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"dd8b4c76-ed1c-4580-9c55-ac22c5c1e2a9"},"execution_count":164,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[11,  0],\n","       [ 0, 14]])"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["acc = accuracy_score(y_test,y_pred)\n","acc*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6RTQFojsejt8","executionInfo":{"status":"ok","timestamp":1681120916927,"user_tz":-330,"elapsed":1,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"686f0f31-4765-4713-8e30-d4371a3d1522"},"execution_count":165,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100.0"]},"metadata":{},"execution_count":165}]},{"cell_type":"code","source":["print(\"Accuracy: \", classifier.score(X_test, y_test) * 100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y3IuNOUjfyKY","executionInfo":{"status":"ok","timestamp":1681121159896,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"76c9394f-c525-4b34-f24e-7f2dd2fc3634"},"execution_count":168,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:  100.0\n"]}]},{"cell_type":"code","source":["# Plotting Of Auc and ROC"],"metadata":{"id":"2qEYnqSBkHMA","executionInfo":{"status":"ok","timestamp":1681121806499,"user_tz":-330,"elapsed":537,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":170,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import roc_curve , auc\n"],"metadata":{"id":"NcONdUw7kR3B","executionInfo":{"status":"ok","timestamp":1681121842745,"user_tz":-330,"elapsed":1,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":171,"outputs":[]},{"cell_type":"code","source":["fpr,tpr,threshold = roc_curve(y_test,classifier.predict_proba(X_test)[:,1])"],"metadata":{"id":"MIPvQyBeq4oE","executionInfo":{"status":"ok","timestamp":1681122094768,"user_tz":-330,"elapsed":1,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}}},"execution_count":175,"outputs":[]},{"cell_type":"code","source":["auc = auc(fpr,tpr)\n","print('AUC',auc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rNShR7YqruLE","executionInfo":{"status":"ok","timestamp":1681122342409,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"751cf6a3-927e-4798-ca00-0b02a16cb9f9"},"execution_count":176,"outputs":[{"output_type":"stream","name":"stdout","text":["AUC 1.0\n"]}]},{"cell_type":"code","source":["plt.plot(fpr,tpr)\n","plt.plot([0,1],[0,1],'k--')\n","plt.xlabel('False Positive Rate')\n","plt.ylable('True Positive Rate')\n","plt.title('Reciever Opratating characteristic(ROC) curve')\n","plt.legend(loc='lower right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":668},"id":"n5v-M0Q-syn9","executionInfo":{"status":"error","timestamp":1681122795042,"user_tz":-330,"elapsed":991,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"97201f8f-975d-449b-93c6-1b194dfedc4e"},"execution_count":180,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-180-085e9210e84c>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'k--'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'False Positive Rate'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'True Positive Rate'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Reciever Opratating characteristic(ROC) curve'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'lower right'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: module 'matplotlib.pyplot' has no attribute 'ylable'"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"lae69dFCtdmz"},"execution_count":null,"outputs":[]}]}