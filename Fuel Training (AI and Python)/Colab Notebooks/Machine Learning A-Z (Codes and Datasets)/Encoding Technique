{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMTNWs+/cbta6j+kc9tF0HD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"5QJX9K3g4E4r"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt \n","import seaborn as sns\n","import warnings"]},{"cell_type":"code","source":["df = pd.read_csv(\"Social_Network_Ads.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"vfzrpIi74Fxm","executionInfo":{"status":"ok","timestamp":1681388952337,"user_tz":-330,"elapsed":18,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"150e50c4-bae8-4736-cbd1-1b8a07a16e5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      User ID  Gender  Age  EstimatedSalary  Purchased\n","0    15624510    Male   19            19000          0\n","1    15810944    Male   35            20000          0\n","2    15668575  Female   26            43000          0\n","3    15603246  Female   27            57000          0\n","4    15804002    Male   19            76000          0\n","..        ...     ...  ...              ...        ...\n","395  15691863  Female   46            41000          1\n","396  15706071    Male   51            23000          1\n","397  15654296  Female   50            20000          1\n","398  15755018    Male   36            33000          0\n","399  15594041  Female   49            36000          1\n","\n","[400 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-811ba8a9-fdb6-45a7-99b0-17769253bacb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","      <td>Female</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15603246</td>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15804002</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>15691863</td>\n","      <td>Female</td>\n","      <td>46</td>\n","      <td>41000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>15706071</td>\n","      <td>Male</td>\n","      <td>51</td>\n","      <td>23000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>15654296</td>\n","      <td>Female</td>\n","      <td>50</td>\n","      <td>20000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>15755018</td>\n","      <td>Male</td>\n","      <td>36</td>\n","      <td>33000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>15594041</td>\n","      <td>Female</td>\n","      <td>49</td>\n","      <td>36000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-811ba8a9-fdb6-45a7-99b0-17769253bacb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-811ba8a9-fdb6-45a7-99b0-17769253bacb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-811ba8a9-fdb6-45a7-99b0-17769253bacb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":240}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AY7xkyN64Nbq","executionInfo":{"status":"ok","timestamp":1681388952337,"user_tz":-330,"elapsed":15,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"591a42ba-c78a-4382-a9f6-dd003060a293"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 400 entries, 0 to 399\n","Data columns (total 5 columns):\n"," #   Column           Non-Null Count  Dtype \n","---  ------           --------------  ----- \n"," 0   User ID          400 non-null    int64 \n"," 1   Gender           400 non-null    object\n"," 2   Age              400 non-null    int64 \n"," 3   EstimatedSalary  400 non-null    int64 \n"," 4   Purchased        400 non-null    int64 \n","dtypes: int64(4), object(1)\n","memory usage: 15.8+ KB\n"]}]},{"cell_type":"code","source":["df.Gender"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Aaja9lT4OqS","executionInfo":{"status":"ok","timestamp":1681388952338,"user_tz":-330,"elapsed":13,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"1acbfc55-0546-4b89-82ed-f3f711e3520c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        Male\n","1        Male\n","2      Female\n","3      Female\n","4        Male\n","        ...  \n","395    Female\n","396      Male\n","397    Female\n","398      Male\n","399    Female\n","Name: Gender, Length: 400, dtype: object"]},"metadata":{},"execution_count":242}]},{"cell_type":"code","source":["df.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dE2lGZho4STc","executionInfo":{"status":"ok","timestamp":1681388952338,"user_tz":-330,"elapsed":12,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"73050e12-61d4-41d3-9e35-afa8dd3f1215"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["User ID            0\n","Gender             0\n","Age                0\n","EstimatedSalary    0\n","Purchased          0\n","dtype: int64"]},"metadata":{},"execution_count":243}]},{"cell_type":"code","source":["df.Gender.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tuAeUvo94XQR","executionInfo":{"status":"ok","timestamp":1681388952338,"user_tz":-330,"elapsed":11,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"ad3b50f8-fb7e-4226-feb7-3a4898e42bdc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Male', 'Female'], dtype=object)"]},"metadata":{},"execution_count":244}]},{"cell_type":"code","source":["#df= df.replace(\"User ID\", \"User_ID\",inplace = True)"],"metadata":{"id":"dpLw57Wq6MGZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# df"],"metadata":{"id":"p00GKZGu6auH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.drop(\"User ID\",inplace=True,axis = 1)"],"metadata":{"id":"-dbOo6gA5hAV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"FSSmAxBW6xmn","executionInfo":{"status":"ok","timestamp":1681388952339,"user_tz":-330,"elapsed":11,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"9e8e2316-1bd8-4bfa-90e3-f9bf46e8406b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Gender  Age  EstimatedSalary  Purchased\n","0      Male   19            19000          0\n","1      Male   35            20000          0\n","2    Female   26            43000          0\n","3    Female   27            57000          0\n","4      Male   19            76000          0\n","..      ...  ...              ...        ...\n","395  Female   46            41000          1\n","396    Male   51            23000          1\n","397  Female   50            20000          1\n","398    Male   36            33000          0\n","399  Female   49            36000          1\n","\n","[400 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-233c12d0-ef1b-426a-a17f-5cf17afe2a38\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Female</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>Female</td>\n","      <td>46</td>\n","      <td>41000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>Male</td>\n","      <td>51</td>\n","      <td>23000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>Female</td>\n","      <td>50</td>\n","      <td>20000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>Male</td>\n","      <td>36</td>\n","      <td>33000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>Female</td>\n","      <td>49</td>\n","      <td>36000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-233c12d0-ef1b-426a-a17f-5cf17afe2a38')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-233c12d0-ef1b-426a-a17f-5cf17afe2a38 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-233c12d0-ef1b-426a-a17f-5cf17afe2a38');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":248}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","label_encoder =LabelEncoder()\n","df['Gender']= label_encoder.fit_transform(df['Gender'])"],"metadata":{"id":"CAMubrPq4_7l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[\"Gender\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2OFb6wRs5Lzg","executionInfo":{"status":"ok","timestamp":1681388952339,"user_tz":-330,"elapsed":10,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"151f6645-b40c-46b2-9e59-020f9d44b8bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      1\n","1      1\n","2      0\n","3      0\n","4      1\n","      ..\n","395    0\n","396    1\n","397    0\n","398    1\n","399    0\n","Name: Gender, Length: 400, dtype: int64"]},"metadata":{},"execution_count":250}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ZCEvWJQZ-x6q","executionInfo":{"status":"ok","timestamp":1681388952339,"user_tz":-330,"elapsed":9,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"3966e559-61a8-4616-cabb-698c73b8d33f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Gender  Age  EstimatedSalary  Purchased\n","0         1   19            19000          0\n","1         1   35            20000          0\n","2         0   26            43000          0\n","3         0   27            57000          0\n","4         1   19            76000          0\n","..      ...  ...              ...        ...\n","395       0   46            41000          1\n","396       1   51            23000          1\n","397       0   50            20000          1\n","398       1   36            33000          0\n","399       0   49            36000          1\n","\n","[400 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-3599f76a-8b43-4351-b166-9e9ea052718d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>41000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>1</td>\n","      <td>51</td>\n","      <td>23000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>20000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>1</td>\n","      <td>36</td>\n","      <td>33000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>0</td>\n","      <td>49</td>\n","      <td>36000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3599f76a-8b43-4351-b166-9e9ea052718d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3599f76a-8b43-4351-b166-9e9ea052718d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3599f76a-8b43-4351-b166-9e9ea052718d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":251}]},{"cell_type":"code","source":["df[['EstimatedSalary']].boxplot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"OxU3_Pmh8xYN","executionInfo":{"status":"ok","timestamp":1681388952864,"user_tz":-330,"elapsed":533,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"11532a36-4754-4a44-ecd0-a5238601e844"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":252},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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9OihQYMG+Y3FxMSoZ8+e1nhBQYEKCwuVkJAgp9Ope++9V1lZWRo2bJgkKScnRwMGDNCtt96qoqIieTwePfzww5oyZYp1xubuu+/Wc889p4ceeki33367Nm7cqGXLlmn16tXWdgsLCzVhwgQNHTpUV111lZ5++mmdPHlSEydODPRuAwCATigof1n6qaeeUmhoqG688UbV19crNzdXL7zwgjXfrVs3rVq1Svfcc4+ysrIUExOjCRMm6NFHH7VqUlNTtXr1at1///1atGiRLrroIv3ud79Tbm6uVTNmzBh9+umnmj17tjwej4YMGaJ169a1uoEaAADYU4gxxgS7iY7K6/UqNjZWtbW13CwNdDHlB48q/8UtWnnPMA1J6RnsdgAEUHs+v8/7V2wAAAB0VAQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwQhAABgWwEPQvPmzdP3vvc99ejRQ7169VJ+fr4qKyv9ak6fPq0pU6aoZ8+e6t69u2688UZVVVX51Rw6dEh5eXmKjo5Wr1699OCDD6qxsdGv5t1339UVV1whh8OhSy+9VK+88kqrfp5//nldfPHFioyMVGZmprZu3RroXQYAAJ1UwIPQpk2bNGXKFG3ZskXFxcXy+XzKycnRyZMnrZr7779fb775ppYvX65NmzbpyJEjuuGGG6z5pqYm5eXlqaGhQZs3b9bvf/97vfLKK5o9e7ZVs3//fuXl5en6669XeXm5pk+frjvuuENvvfWWVfP666+rsLBQjzzyiD744AMNHjxYubm5qq6uDvRuAwCAzsicZ9XV1UaS2bRpkzHGmJqaGhMeHm6WL19u1Xz00UdGknG73cYYY9asWWNCQ0ONx+Oxal588UXjdDpNfX29McaYhx56yAwcONBvW2PGjDG5ubnW8lVXXWWmTJliLTc1NZmkpCQzb968NvVe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s2bN+trtAfgCQQjAP+xPf/qTnnrqKf32t7/Vvn37tHLlSmVkZEiS/vznP+uiiy7So48+qk8++USffPLJ167nb3/7m9auXat169Zp6dKl+rd/+zfl5eXp73//uzZt2qT58+fr4YcfVmlpqfWa0NBQPfPMM9qzZ49+//vfa+PGjXrooYckSVdffbWefvppOZ1Oa9stIWXq1Klyu9167bXXtGvXLt10000aOXKk9u3bJ0kqLS1VQUGBpk6dqvLycl1//fV67LHH/Pp1uVzauHGjPv3006/dp5MnT6qwsFDbt2/Xhg0bFBoaqtGjR6u5ufmM9c3Nzbrooou0fPlyffjhh5o9e7Z++ctfatmyZX51GzZsUGVlpYqLi7Vq1Srdfvvt+uijj7Rt2zarZseOHdq1a5cmTpz4tf0B+F8GAM5iwoQJplu3biYmJsbv5/HHHzcLFy40/fr1Mw0NDWd8bUpKinnqqaf8xl5++WUTGxtrLT/yyCMmOjraeL1eayw3N9dcfPHFpqmpyRpLS0sz8+bN+9o+ly9fbnr27Pm12zHGmIMHD5pu3bqZw4cP+42PGDHCzJw50xhjzLhx48yPf/xjv/kxY8b4rWvPnj2mf//+JjQ01GRkZJi77rrLrFmz5mt7M8aYTz/91EgyFRUVxhhj9u/fbySZHTt2fO1rpkyZYm688UZrecKECSYxMdHU19f71f3oRz8y99xzj7V87733mh/84Adn7QfAFzgjBOCcrr/+epWXl/v93H333brpppv0+eef65JLLtGkSZO0YsUKNTY2tnv9F198sXr06GEtJyYmasCAAQoNDfUbq66utpbffvttjRgxQn369FGPHj1066236ujRozp16tTXbqeiokJNTU3q16+funfvbv1s2rTJumz10UcfKTMz0+91WVlZfssDBgzQ7t27tWXLFt1+++2qrq7WqFGjdMcdd1g1+/bt07hx43TJJZfI6XTq4osvliQdOnToa/t7/vnndeWVV+rCCy9U9+7dtWTJklb1GRkZre4LmjRpkpYuXarTp0+roaFBr776qm6//fav3Q6A/8PN0gDOKSYmRpdeemmr8YSEBFVWVurtt99WcXGxJk+erAULFmjTpk0KDw9v8/q/WhsSEnLGsZbLSgcOHNBPfvIT3XPPPXr88ceVkJCg9957TwUFBWpoaFB0dPQZt1NXV6du3bqprKxM3bp185vr3r17m/uVvrg0973vfU/f+973NH36dP3hD3/Qrbfeql/96ldKTU3VqFGjlJKSopdeeklJSUlqbm7WoEGD1NDQcMb1vfbaa/r5z3+uhQsXKisrSz169NCCBQv8LgdKX/y/+KpRo0bJ4XBoxYoVioiIkM/n009/+tN27Q9gVwQhAN9IVFSURo0apVGjRmnKlClKT09XRUWFrrjiCkVERKipqSng2ywrK1Nzc7MWLlxonTX66r00Z9r25ZdfrqamJlVXV+vaa68947r79+/fKnxs2bLlnD0NGDBA0hf3Bh09elSVlZV66aWXrO289957Z339+++/r6uvvlqTJ0+2xs52c/WXhYWFacKECXr55ZcVERGhsWPHdvon84BvC0EIwDnV19fL4/H4jYWFhWnVqlVqampSZmamoqOj9Yc//EFRUVFKSUmR9MUlr5KSEo0dO1YOh0MXXHBBQPq59NJL5fP59Oyzz2rUqFF6//33tXjxYr+aiy++WHV1ddqwYYMGDx6s6Oho9evXT+PHj9dtt92mhQsX6vLLL9enn36qDRs26Lvf/a7y8vJ033336ZprrtFvfvMb/fM//7PeeustrVu3zm/dP/3pT3XNNdfo6quvlsvl0v79+zVz5kz169dP6enpCg0NVc+ePbVkyRL17t1bhw4d0i9+8Yuz7tNll12m//iP/9Bbb72l1NRU/ed//qe2bdum1NTUNr0nd9xxh/r37y/pi1AFoG24RwjAOa1bt069e/f2+2l5NPyll17SNddco+9+97t6++239eabb6pnz56SpEcffVQHDhzQd77zHV144YUB62fw4MF68sknNX/+fA0aNEh//OMfNW/ePL+aq6++WnfffbfGjBmjCy+8UEVFRZKkl19+WbfddpseeOABpaWlKT8/X9u2bVPfvn0lScOGDdNLL72kRYsWafDgwVq/fr0efvhhv3Xn5ubqzTff1KhRo9SvXz9NmDBB6enpWr9+vcLCwhQaGqrXXntNZWVlGjRokO6//34tWLDgrPt011136YYbbtCYMWOUmZmpo0eP+p0dOpfLLrtMV199tdLT01vd4wTg64UYY0ywmwAAfDPGGF122WWaPHmyCgsLg90O0GlwaQwAOrlPP/1Ur732mjweD387CGgnghAAdHK9evXSBRdcoCVLlig+Pj7Y7QCdCkEIADo57nAA/nHcLA0AAGyLIAQAAGyLIAQAAGyLIAQAAGyLIAQAAGyLIAQAAGyLIAQAAGyLIAQAAGyLIAQAAGzr/wMe5HGp37Tf4AAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"8e6ns3378w8D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df.drop(\"Purchased\",axis = 1)\n","y = df.Purchased"],"metadata":{"id":"MAgGwa726nzW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8351JnD7A9D","executionInfo":{"status":"ok","timestamp":1681388952865,"user_tz":-330,"elapsed":10,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"5369071e-2624-4866-a600-ed450b40c4ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","395    1\n","396    1\n","397    1\n","398    0\n","399    1\n","Name: Purchased, Length: 400, dtype: int64"]},"metadata":{},"execution_count":254}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)\n"],"metadata":{"id":"6W-E4to_7GQ9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","classifier = RandomForestClassifier()\n","classifier.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"XN3wYEc08Z31","executionInfo":{"status":"ok","timestamp":1681388952865,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"f9741b23-bc85-46bf-d4a7-6ca22d66cd02"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-16 {color: black;background-color: white;}#sk-container-id-16 pre{padding: 0;}#sk-container-id-16 div.sk-toggleable {background-color: white;}#sk-container-id-16 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-16 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-16 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-16 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-16 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-16 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-16 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-16 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-16 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-16 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-16 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-16 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-16 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-16 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-16 div.sk-item {position: relative;z-index: 1;}#sk-container-id-16 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-16 div.sk-item::before, #sk-container-id-16 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-16 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-16 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-16 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-16 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-16 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-16 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-16 div.sk-label-container {text-align: center;}#sk-container-id-16 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-16 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-16\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" checked><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":256}]},{"cell_type":"code","source":["y_pred=classifier.predict(X_test)"],"metadata":{"id":"tQpoCoIv8mw8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score"],"metadata":{"id":"M_ZckdPC9SKp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NFR9y0aI-ERv","executionInfo":{"status":"ok","timestamp":1681388952866,"user_tz":-330,"elapsed":9,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"362579f8-ba6b-4943-e114-50d8a6983d0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9166666666666666"]},"metadata":{},"execution_count":259}]},{"cell_type":"code","source":["test_score = classifier.score(X_test,y_test)\n","train_score = classifier.score(X_train,y_train)\n","\n","print(\"Test Score is \",test_score*100,\"Train score is \",train_score*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XCMgpd4x-kvs","executionInfo":{"status":"ok","timestamp":1681388953432,"user_tz":-330,"elapsed":572,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"431e5ffd-70e1-46e1-cff9-53b5189ecc79"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Score is  91.66666666666666 Train score is  100.0\n"]}]},{"cell_type":"markdown","source":["# Random Search CV"],"metadata":{"id":"EHsySPl4Czkx"}},{"cell_type":"code","source":["from sklearn.model_selection import RandomizedSearchCV"],"metadata":{"id":"U4pt3hbP_6o9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["params = {'n_estimators':[100,200,300],\n","          'criterion':['gini','entropy'],\n","          'max_depth':np.arange(2,20),\n","          \"min_samples_leaf\":np.arange(1,20),\n","          'min_samples_split':np.arange(2,20)    \n","}"],"metadata":{"id":"3DLOlAJwD43G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier =RandomForestClassifier()"],"metadata":{"id":"LFmYs1ALD4zq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = RandomizedSearchCV(classifier,param_distributions = params,cv=10)"],"metadata":{"id":"T3N4-aRyGaKQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":116},"id":"W0NF1kIHG1cd","executionInfo":{"status":"ok","timestamp":1681388990988,"user_tz":-330,"elapsed":37557,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"04ab3443-1ebd-4eef-b8ae-3506962ac707"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomizedSearchCV(cv=10, estimator=RandomForestClassifier(),\n","                   param_distributions={'criterion': ['gini', 'entropy'],\n","                                        'max_depth': array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        'min_samples_leaf': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19]),\n","                                        'min_samples_split': array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        'n_estimators': [100, 200, 300]})"],"text/html":["<style>#sk-container-id-17 {color: black;background-color: white;}#sk-container-id-17 pre{padding: 0;}#sk-container-id-17 div.sk-toggleable {background-color: white;}#sk-container-id-17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-17 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-17 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-17 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-17 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-17 div.sk-item {position: relative;z-index: 1;}#sk-container-id-17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-17 div.sk-item::before, #sk-container-id-17 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-17 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-17 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-17 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-17 div.sk-label-container {text-align: center;}#sk-container-id-17 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-17 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-17\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=10, estimator=RandomForestClassifier(),\n","                   param_distributions={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                                        &#x27;max_depth&#x27;: array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        &#x27;min_samples_leaf&#x27;: array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19]),\n","                                        &#x27;min_samples_split&#x27;: array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        &#x27;n_estimators&#x27;: [100, 200, 300]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=10, estimator=RandomForestClassifier(),\n","                   param_distributions={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n","                                        &#x27;max_depth&#x27;: array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        &#x27;min_samples_leaf&#x27;: array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19]),\n","                                        &#x27;min_samples_split&#x27;: array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n","       19]),\n","                                        &#x27;n_estimators&#x27;: [100, 200, 300]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" ><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":265}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"AlxsaLChKyqC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(accuracy_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tayo158uK5KC","executionInfo":{"status":"ok","timestamp":1681388990988,"user_tz":-330,"elapsed":16,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"35d7dd01-12d2-4077-bb22-11dfb550f2f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9166666666666666\n"]}]},{"cell_type":"code","source":["model.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9r9RDRj6Hg0T","executionInfo":{"status":"ok","timestamp":1681388990989,"user_tz":-330,"elapsed":14,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"19c273e0-8eae-4f72-fd27-fc21bf9e3ab2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_estimators': 300,\n"," 'min_samples_split': 16,\n"," 'min_samples_leaf': 15,\n"," 'max_depth': 7,\n"," 'criterion': 'gini'}"]},"metadata":{},"execution_count":268}]},{"cell_type":"code","source":["model.best_score_\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EEhjF9S1Hi06","executionInfo":{"status":"ok","timestamp":1681388990989,"user_tz":-330,"elapsed":12,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"13fc7532-0f0e-44ce-8090-93e6bfcc0fbd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9178571428571427"]},"metadata":{},"execution_count":269}]},{"cell_type":"code","source":["model.n_splits_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S5dJWNTuIwEd","executionInfo":{"status":"ok","timestamp":1681388990989,"user_tz":-330,"elapsed":10,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"c5e414bc-0780-4bde-8146-d8e62f941cc0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":270}]},{"cell_type":"code","source":["# model.cv_results_"],"metadata":{"id":"5AcwYrO1JbSQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df.drop(\"EstimatedSalary\",axis = 1)\n","y = df.EstimatedSalary"],"metadata":{"id":"cFs0TI_kJi3A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nsK9YCV8LUvb","executionInfo":{"status":"ok","timestamp":1681388990989,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"644b2ff9-172c-4581-a98c-e78703f74290"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      19000\n","1      20000\n","2      43000\n","3      57000\n","4      76000\n","       ...  \n","395    41000\n","396    23000\n","397    20000\n","398    33000\n","399    36000\n","Name: EstimatedSalary, Length: 400, dtype: int64"]},"metadata":{},"execution_count":273}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)"],"metadata":{"id":"7YUosM2ZOM8m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","regressor = RandomForestRegressor()\n","regressor.fit(X_train,y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"CRbcqZJlOe5q","executionInfo":{"status":"ok","timestamp":1681388991636,"user_tz":-330,"elapsed":651,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"51c65ed4-6632-4c41-a570-62f8492fcf5f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor()"],"text/html":["<style>#sk-container-id-18 {color: black;background-color: white;}#sk-container-id-18 pre{padding: 0;}#sk-container-id-18 div.sk-toggleable {background-color: white;}#sk-container-id-18 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-18 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-18 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-18 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-18 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-18 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-18 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-18 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-18 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-18 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-18 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-18 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-18 div.sk-item {position: relative;z-index: 1;}#sk-container-id-18 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-18 div.sk-item::before, #sk-container-id-18 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-18 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-18 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-18 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-18 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-18 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-18 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-18 div.sk-label-container {text-align: center;}#sk-container-id-18 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-18 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-18\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" checked><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":275}]},{"cell_type":"code","source":["y_pred=regressor.predict(X_test)"],"metadata":{"id":"Sam5DnOEkhVk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import r2_score"],"metadata":{"id":"V3nFXywIlQYI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(r2_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3WrrLEpilbR-","executionInfo":{"status":"ok","timestamp":1681388991637,"user_tz":-330,"elapsed":11,"user":{"displayName":"Ritesh Tambe","userId":"09625177872923323547"}},"outputId":"37acdcdc-0113-46bf-93a3-6822f16de6a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.0707044735707687\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"zBjjUG84loQK"},"execution_count":null,"outputs":[]}]}